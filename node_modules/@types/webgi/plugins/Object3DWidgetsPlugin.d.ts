import { AViewerPlugin } from 'webgi/core/AViewerPlugin';
import { ViewerApp } from 'webgi/viewer/ViewerApp';
import { Object3D } from 'three';
import { IWidget, UiObjectConfig } from 'webgi/interfaces';
export interface IObject3DHelper<T extends Object3D & IWidget = Object3D & IWidget> {
    Create: (o: Object3D) => T;
    Check: (o: Object3D) => boolean;
}
export declare class Object3DWidgetsPlugin extends AViewerPlugin<''> {
    enabled: boolean;
    static readonly PluginType = "WidgetsPlugin";
    helpers: IObject3DHelper[];
    visible: boolean;
    protected _onVisibleChange(): void;
    toJSON: any;
    onAdded(viewer: ViewerApp): Promise<void>;
    onRemove(viewer: ViewerApp): Promise<void>;
    private _addSceneObject;
    refresh(): void;
    widgets: IWidget[];
    private _createWidgets;
    uiConfig: UiObjectConfig;
}
//# sourceMappingURL=Object3DWidgetsPlugin.d.ts.map